module sync_ram #(
    parameter DATA_WIDTH = 8,   
    parameter ADDR_WIDTH = 4    
)(
    input clk,                   
    input rst,                   
    input we,                     
    input [ADDR_WIDTH-1:0] addr,
    input [DATA_WIDTH-1:0] din,  
    output reg [DATA_WIDTH-1:0] dout 


reg [DATA_WIDTH-1:0] mem [(2**ADDR_WIDTH)-1:0]; 

always @(posedge clk or posedge rst) begin
    if (rst) begin
        // Reset: clear memory and output data
        integer i;
        for (i = 0; i < (2**ADDR_WIDTH); i = i + 1) begin
            mem[i] <= 0;  
        end
        dout <= 0;
    end
    else begin
        if (we) begin

            mem[addr] <= din;
        end

        dout <= mem[addr];
    end
end

endmodule
